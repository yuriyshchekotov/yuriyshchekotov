{
	"info": {
		"_postman_id": "751e3605-735b-4c5c-86c9-cb3279ba648d",
		"name": "Sample collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22733861"
	},
	"item": [
		{
			"name": "1. Позитивные тесты",
			"item": [
				{
					"name": "1.2 POST /application/convert",
					"item": [
						{
							"name": "1.2.01 application_convert_представитель_заявитель_ЮЛ_строковые_поля_кириллица",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text"
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.01 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text"
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.02 application_convert_представитель_заявитель_ИП_строковые_поля_латиница",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenIP}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdIP}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdIP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringEn10}}\",\r\n        \"RegDate\": \"{{currentDateZeroTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringEn499}}\",\r\n                \"Name\": \"{{stringEn249}}\",\r\n                \"Ogrn\": \"123456789012345\",\r\n                \"Inn\": \"123456789012\",\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"abcdefghijklmnopqrstuvwxyz@АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ.рф\",\r\n                \"OrganizationType\": \"IP\",\r\n                \"CorpId\": \"{{corpIdIP}}\",\r\n                \"SsoId\": \"{{ssoIdIP}}\",\r\n                \"OrganizationFormCode\": \"91\",\r\n                \"OrganizationFormName\": \"Индивидуальный предприниматель\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"6789\",\r\n                        \"DocTitle\": \"{{stringEn249}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringEn199}}\",\r\n                        \"DocNumber\": \"{{stringEn199}}\",\r\n                        \"DocDate\": \"2020-02-29\",\r\n                        \"WhoSign\": \"{{stringEn249}}\",\r\n                        \"DivisionCode\": \"555-555\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringEn499}}\",\r\n                \"Name\": \"{{stringEn249}}\",\r\n                \"Ogrn\": \"123456789012345\",\r\n                \"Inn\": \"123456789012\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringEn249}}\",\r\n                    \"CountryCode\": \"{{stringEn249}}\",\r\n                    \"PostalCode\": \"678901\",\r\n                    \"Locality\": \"0123456789\",\r\n                    \"Region\": \"0123456789\",\r\n                    \"City\": \"0123456789\",\r\n                    \"Town\": \"0123456789\",\r\n                    \"Street\": \"0123456789\",\r\n                    \"House\": \"0123456789\",\r\n                    \"Building\": \"0123456789\",\r\n                    \"Structure\": \"0123456789\",\r\n                    \"Ownership\": \"0123456789\",\r\n                    \"Flat\": \"{{stringEn14}}\",\r\n                    \"POBox\": \"0123456789\",\r\n                    \"Okato\": \"1234567890\",\r\n                    \"KladrCode\": \"123456789012345678\",\r\n                    \"BtiBuildingCode\": \"7890\",\r\n                    \"BtiAltCode\": \"7890\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"0123456789\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест Тестантинов\",\r\n                    \"FirstName\": \"Тест Тестантин\",\r\n                    \"MiddleName\": \"Тест Тестантинович\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"abcdefghijklmnopqrstuvwxyz@АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ.рф\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"abcdefghijklmnopqrstuvwxyz@АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ.рф\",\r\n                \"OrganizationType\": \"IP\",\r\n                \"OrganizationFormCode\": \"91\",\r\n                \"OrganizationFormName\": \"Индивидуальный предприниматель\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"6789\",\r\n                        \"DocTitle\": \"{{stringEn249}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringEn199}}\",\r\n                        \"DocNumber\": \"{{stringEn199}}\",\r\n                        \"DocDate\": \"2020-02-29\",\r\n                        \"WhoSign\": \"{{stringEn249}}\",\r\n                        \"DivisionCode\": \"555-555\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"6789\",\r\n            \"DocTitle\": \"{{stringEn249}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringEn199}}\",\r\n            \"DocNumber\": \"{{stringEn199}}\",\r\n            \"DocDate\": \"2020-02-29\",\r\n            \"WhoSign\": \"{{stringEn249}}\",\r\n            \"DivisionCode\": \"555-555\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 3,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"TypeTrustee\": 3,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 2,\r\n                \"Name\": \"В связи с реорганизацией юридического лица (отображается в случае, если лицензиат является юридическим лицом)\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-12-31T12:30:30.555+03:00\",\r\n                \"Country\": \"{{stringEn249}}\",\r\n                \"CountryCode\": \"{{stringEn249}}\",\r\n                \"PostalCode\": \"678901\",\r\n                \"Locality\": \"1234567890\",\r\n                \"Region\": \"1234567890\",\r\n                \"City\": \"1234567890\",\r\n                \"Town\": \"1234567890\",\r\n                \"Street\": \"1234567890\",\r\n                \"House\": \"1234567890\",\r\n                \"Building\": \"1234567890\",\r\n                \"Structure\": \"1234567890\",\r\n                \"Facility\": \"1234567890\",\r\n                \"Ownership\": \"1234567890\",\r\n                \"Flat\": \"{{stringEn14}}\",\r\n                \"POBox\": \"1234567890\",\r\n                \"Okato\": \"1234567890\",\r\n                \"KladrCode\": \"123456789012345678\",\r\n                \"KladrStreetCode\": \"123456789012345678\",\r\n                \"BTIDistrictCode\": \"7890\",\r\n                \"BTIRegionCode\": \"7890\",\r\n                \"BTIStreetCode\": \"7890\",\r\n                \"BTIBuildingCode\": \"7890\",\r\n                \"BTIAltCode\": \"7890\",\r\n                \"BTIFlatCode\": \"7890\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"1234567890\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringEn249}}\",\r\n        \"OtherInfo\": \"{{stringEn249}}\",\r\n        \"LicenceOrgName\": \"{{stringEn249}}\",\r\n        \"DocDate\": \"2020-02-29\",\r\n        \"DocNum\": \"{{stringEn249}}\",\r\n        \"LegalActName\": \"{{stringEn249}}\",\r\n        \"LegalActNum\": \"{{stringEn249}}\",\r\n        \"LegalActDate\": \"2020-02-29\",\r\n        \"LegalActChg\": \"{{stringEn249}}\",\r\n        \"DocLitsenziatDate\": \"2020-02-29\",\r\n        \"DocLitsenziatNum\": \"{{stringEn249}}\",\r\n        \"LicenceDate\": \"2020-02-29\",\r\n        \"LicenceFormNum\": \"{{stringEn249}}\",\r\n        \"LicenceNum\": \"{{stringEn249}}\",\r\n        \"LicenceOrderDate\": \"2020-02-29\",\r\n        \"LicenceOrderNum\": \"{{stringEn249}}\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.02 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenIP}}",
										"type": "text"
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdIP}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdIP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.03 application_convert_строковые_поля_числа",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"1234567890\",\r\n        \"RegDate\": \"{{currentDateZeroMmSs}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"0123456789\",\r\n                \"Name\": \"0123456789\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"0123456789\",\r\n                    \"CountryCode\": \"0123456789\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringSpec}}\",\r\n                    \"Region\": \"{{stringSpec}}\",\r\n                    \"City\": \"{{stringSpec}}\",\r\n                    \"Town\": \"{{stringSpec}}\",\r\n                    \"Street\": \"{{stringSpec}}\",\r\n                    \"House\": \"{{stringSpec}}\",\r\n                    \"Building\": \"{{stringSpec}}\",\r\n                    \"Structure\": \"{{stringSpec}}\",\r\n                    \"Ownership\": \"{{stringSpec}}\",\r\n                    \"Flat\": \"0123456789\",\r\n                    \"POBox\": \"{{stringSpec}}\",\r\n                    \"Okato\": \"1\",\r\n                    \"KladrCode\": \"1\",\r\n                    \"BtiBuildingCode\": \"1\",\r\n                    \"BtiAltCode\": \"1\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringSpec}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест-Тестантинов\",\r\n                    \"FirstName\": \"Тест-Тестантин\",\r\n                    \"MiddleName\": \"Тест-Тестантинович\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te.st@ABCDEFGHIJKLMNOPQRSTUVWXYZ.ac\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te.st@ABCDEFGHIJKLMNOPQRSTUVWXYZ.ac\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"0\",\r\n                        \"DocTitle\": \"0123456789\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"0123456789\",\r\n                        \"DocNumber\": \"0123456789\",\r\n                        \"DocDate\": \"2020-12-31\",\r\n                        \"WhoSign\": \"0123456789\",\r\n                        \"DivisionCode\": \"999-999\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"DocTitle\": \"0123456789\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"0123456789\",\r\n            \"DocNumber\": \"0123456789\",\r\n            \"DocDate\": \"2020-12-31\",\r\n            \"WhoSign\": \"0123456789\",\r\n            \"DivisionCode\": \"999-999\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 2,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 3,\r\n                \"Name\": \"В случае изменения наименования юридического лица или места его нахождения. а также в случае изменения места жительства, фамилии, имени или отчества индивидуального предпринимателя, реквизитов документа, удостоверяющего его личность, указываются новые сведения о лицензиате и данные документа, подтверждающего факт внесения соответствующих изменений в единый государственный реестр юридических лиц (для лицензиата – юридического лица), в единый государственный реестр индивидуальных предпринимателей (для лицензиата – индивидуального предпринимателя)\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-02-29T23:59:59.999+03:00\",\r\n                \"Country\": \"1234567890\",\r\n                \"CountryCode\": \"1234567890\",\r\n                \"PostalCode\": \"678901\",\r\n                \"Locality\": \"{{stringSpec}}\",\r\n                \"Region\": \"{{stringSpec}}\",\r\n                \"City\": \"{{stringSpec}}\",\r\n                \"Town\": \"{{stringSpec}}\",\r\n                \"Street\": \"{{stringSpec}}\",\r\n                \"House\": \"{{stringSpec}}\",\r\n                \"Building\": \"{{stringSpec}}\",\r\n                \"Structure\": \"{{stringSpec}}\",\r\n                \"Facility\": \"{{stringSpec}}\",\r\n                \"Ownership\": \"{{stringSpec}}\",\r\n                \"Flat\": \"1234567890\",\r\n                \"POBox\": \"{{stringSpec}}\",\r\n                \"Okato\": \"1\",\r\n                \"KladrCode\": \"1\",\r\n                \"KladrStreetCode\": \"1\",\r\n                \"BTIDistrictCode\": \"1\",\r\n                \"BTIRegionCode\": \"1\",\r\n                \"BTIStreetCode\": \"1\",\r\n                \"BTIBuildingCode\": \"1\",\r\n                \"BTIAltCode\": \"1\",\r\n                \"BTIFlatCode\": \"1\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringSpec}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"1234567890\",\r\n        \"OtherInfo\": \"1234567890\",\r\n        \"LicenceOrgName\": \"1234567890\",\r\n        \"DocDate\": \"2020-12-31\",\r\n        \"DocNum\": \"1234567890\",\r\n        \"LegalActName\": \"1234567890\",\r\n        \"LegalActNum\": \"1234567890\",\r\n        \"LegalActDate\": \"2020-12-31\",\r\n        \"LegalActChg\": \"1234567890\",\r\n        \"DocLitsenziatDate\": \"2020-12-31\",\r\n        \"DocLitsenziatNum\": \"1234567890\",\r\n        \"LicenceDate\": \"2020-12-31\",\r\n        \"LicenceFormNum\": \"1234567890\",\r\n        \"LicenceNum\": \"1234567890\",\r\n        \"LicenceOrderDate\": \"2020-12-31\",\r\n        \"LicenceOrderNum\": \"1234567890\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.03 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.04 application_convert_строковые_поля_спецсимволы",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringSpec}}\",\r\n        \"RegDate\": \"{{currentDateZeroHhSs}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringSpec}}\",\r\n                \"Name\": \"{{stringSpec}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringSpec}}\",\r\n                    \"CountryCode\": \"{{stringSpec}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"{{stringSpec}}\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест'Тестантинов\",\r\n                    \"FirstName\": \"Тест'Тестантин\",\r\n                    \"MiddleName\": \"Тест'Тестантинович\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te_st@abcdefghijklmnopqrstuvwxyz.kr\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te_st@abcdefghijklmnopqrstuvwxyz.kr\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringSpec}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringSpec}}\",\r\n                        \"DocNumber\": \"{{stringSpec}}\",\r\n                        \"DocDate\": \"{{currentDate}}\",\r\n                        \"WhoSign\": \"{{stringSpec}}\",\r\n                        \"DivisionCode\": \"999-999\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringSpec}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringSpec}}\",\r\n            \"DocNumber\": \"{{stringSpec}}\",\r\n            \"DocDate\": \"{{currentDate}}\",\r\n            \"WhoSign\": \"{{stringSpec}}\",\r\n            \"DivisionCode\": \"999-999\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"{{currentDateTime}}\",\r\n                \"Country\": \"{{stringSpec}}\",\r\n                \"CountryCode\": \"{{stringSpec}}\",\r\n                \"PostalCode\": \"678901\",\r\n                \"Locality\": \"б\",\r\n                \"Region\": \"б\",\r\n                \"City\": \"б\",\r\n                \"Town\": \"б\",\r\n                \"Street\": \"б\",\r\n                \"House\": \"б\",\r\n                \"Building\": \"б\",\r\n                \"Structure\": \"б\",\r\n                \"Facility\": \"б\",\r\n                \"Ownership\": \"б\",\r\n                \"Flat\": \"{{stringSpec}}\",\r\n                \"POBox\": \"бвг\",\r\n                \"Okato\": \"1\",\r\n                \"KladrCode\": \"1\",\r\n                \"KladrStreetCode\": \"1\",\r\n                \"BTIDistrictCode\": \"1\",\r\n                \"BTIRegionCode\": \"1\",\r\n                \"BTIStreetCode\": \"1\",\r\n                \"BTIBuildingCode\": \"1\",\r\n                \"BTIAltCode\": \"1\",\r\n                \"BTIFlatCode\": \"1\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"б\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringSpec}}\",\r\n        \"OtherInfo\": \"{{stringSpec}}\",\r\n        \"LicenceOrgName\": \"{{stringSpec}}\",\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"{{stringSpec}}\",\r\n        \"LegalActName\": \"{{stringSpec}}\",\r\n        \"LegalActNum\": \"{{stringSpec}}\",\r\n        \"LegalActDate\": \"{{currentDate}}\",\r\n        \"LegalActChg\": \"{{stringSpec}}\",\r\n        \"DocLitsenziatDate\": \"{{currentDate}}\",\r\n        \"DocLitsenziatNum\": \"{{stringSpec}}\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"{{stringSpec}}\",\r\n        \"LicenceNum\": \"{{stringSpec}}\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"{{stringSpec}}\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.04 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.05 application_convert_строковые_поля_один_символ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"б\",\r\n        \"RegDate\": \"{{currentDateZeroHhMm}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"а\",\r\n                \"Name\": \"а\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"б\",\r\n                    \"CountryCode\": \"б\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"б\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест.Тестантинов\",\r\n                    \"FirstName\": \"Тест.Тестантин\",\r\n                    \"MiddleName\": \"Тест.Тестантинович\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te-st@te-st.zw\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te-st@te-st.zw\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"б\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"б\",\r\n                        \"DocNumber\": \"б\",\r\n                        \"DocDate\": \"{{currentDate}}\",\r\n                        \"WhoSign\": \"б\",\r\n                        \"DivisionCode\": \"999-999\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"б\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"б\",\r\n            \"DocNumber\": \"б\",\r\n            \"DocDate\": \"{{currentDate}}\",\r\n            \"WhoSign\": \"б\",\r\n            \"DivisionCode\": \"999-999\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"{{currentDateTime}}\",\r\n                \"Country\": \"в\",\r\n                \"CountryCode\": \"в\",\r\n                \"PostalCode\": \"678901\",\r\n                \"Locality\": \"б\",\r\n                \"Region\": \"б\",\r\n                \"City\": \"б\",\r\n                \"Town\": \"б\",\r\n                \"Street\": \"б\",\r\n                \"House\": \"б\",\r\n                \"Building\": \"б\",\r\n                \"Structure\": \"б\",\r\n                \"Facility\": \"б\",\r\n                \"Ownership\": \"б\",\r\n                \"Flat\": \"в\",\r\n                \"POBox\": \"бвг\",\r\n                \"Okato\": \"1\",\r\n                \"KladrCode\": \"1\",\r\n                \"KladrStreetCode\": \"1\",\r\n                \"BTIDistrictCode\": \"1\",\r\n                \"BTIRegionCode\": \"1\",\r\n                \"BTIStreetCode\": \"1\",\r\n                \"BTIBuildingCode\": \"1\",\r\n                \"BTIAltCode\": \"1\",\r\n                \"BTIFlatCode\": \"1\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"б\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"б\",\r\n        \"OtherInfo\": \"б\",\r\n        \"LicenceOrgName\": \"б\",\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"б\",\r\n        \"LegalActName\": \"б\",\r\n        \"LegalActNum\": \"б\",\r\n        \"LegalActDate\": \"{{currentDate}}\",\r\n        \"LegalActChg\": \"б\",\r\n        \"DocLitsenziatDate\": \"{{currentDate}}\",\r\n        \"DocLitsenziatNum\": \"б\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"б\",\r\n        \"LicenceNum\": \"б\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"б\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.05 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.06 application_convert_EMail_домен_второго_уровня",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"1234567890\",\r\n        \"RegDate\": \"{{currentDateZeroHh}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"\",\r\n                \"Name\": \"а\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"б\",\r\n                    \"CountryCode\": \"б\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"б\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест.Тестантинов\",\r\n                    \"FirstName\": \"Тест.Тестантин\",\r\n                    \"MiddleName\": \"\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"t1234567890@test.com.ru\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"t1234567890@test.com.ru\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"\",\r\n                        \"ObjectId\": \"\",\r\n                        \"DocSerie\": \"\",\r\n                        \"DocNumber\": \"\",\r\n                        \"DocDate\": \"\",\r\n                        \"WhoSign\": \"\",\r\n                        \"DivisionCode\": \"\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"\",\r\n            \"ObjectId\": \"\",\r\n            \"DocSerie\": \"\",\r\n            \"DocNumber\": \"\",\r\n            \"DocDate\": \"\",\r\n            \"WhoSign\": \"\",\r\n            \"DivisionCode\": \"\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"{{currentDateTime}}\",\r\n                \"Country\": \"\",\r\n                \"CountryCode\": \"\",\r\n                \"PostalCode\": \"\",\r\n                \"Locality\": \"\",\r\n                \"Region\": \"\",\r\n                \"City\": \"\",\r\n                \"Town\": \"\",\r\n                \"Street\": \"\",\r\n                \"House\": \"\",\r\n                \"Building\": \"\",\r\n                \"Structure\": \"\",\r\n                \"Facility\": \"\",\r\n                \"Ownership\": \"\",\r\n                \"Flat\": \"\",\r\n                \"POBox\": \"\",\r\n                \"Okato\": \"\",\r\n                \"KladrCode\": \"\",\r\n                \"KladrStreetCode\": \"\",\r\n                \"BTIDistrictCode\": \"\",\r\n                \"BTIRegionCode\": \"\",\r\n                \"BTIStreetCode\": \"\",\r\n                \"BTIBuildingCode\": \"\",\r\n                \"BTIAltCode\": \"\",\r\n                \"BTIFlatCode\": \"\",\r\n                \"FiasCode\": \"\",\r\n                \"Litera\": \"\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"\",\r\n        \"OtherInfo\": \"\",\r\n        \"LicenceOrgName\": \"\",\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"в\",\r\n        \"LegalActName\": \"\",\r\n        \"LegalActNum\": \"\",\r\n        \"LegalActDate\": \"\",\r\n        \"LegalActChg\": \"\",\r\n        \"DocLitsenziatDate\": \"\",\r\n        \"DocLitsenziatNum\": \"\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"в\",\r\n        \"LicenceNum\": \"в\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"в\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.06 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.07 application_convert_EMail_домен_третьего_уровня",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"1234567890\",\r\n        \"RegDate\": \"{{currentDateZeroMm}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"Name\": \"а\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"б\",\r\n                    \"CountryCode\": \"б\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"б\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест.Тестантинов\",\r\n                    \"FirstName\": \"Тест.Тестантин\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\"\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"{{currentDateTime}}\"\r\n            }\r\n        ],\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"в\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"в\",\r\n        \"LicenceNum\": \"в\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"в\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.07 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.08 application_convert_Documents_пустой_массив",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"1234567890\",\r\n        \"RegDate\": \"{{currentDateZeroSs}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"Name\": \"а\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"б\",\r\n                    \"CountryCode\": \"б\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"б\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест.Тестантинов\",\r\n                    \"FirstName\": \"Тест.Тестантин\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"Documents\": []\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [],\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"в\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"в\",\r\n        \"LicenceNum\": \"в\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"в\",\r\n        \"VersionPaper\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.08 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.09 application_convert_Documents_пропущен",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" },\r",
											"                SignData: {\r",
											"                    type: \"object\",\r",
											"                    properties: {\r",
											"                        PrintForm: { type: \"string\" },\r",
											"                        Application: { type: \"string\" },\r",
											"                        Files: { type: \"array\", items: { type: \"string\" } }\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            required: [\"ServiceNumber\", \"SignData\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");\r",
											"\r",
											"var serviceNumber = pm.response.json().ApplicationInfos[0].ServiceNumber;\r",
											"pm.collectionVariables.set(\"serviceNumber\",serviceNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"1234567890\",\r\n        \"RegDate\": \"{{leapYearDate}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"Name\": \"а\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"б\",\r\n                    \"CountryCode\": \"б\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"а\",\r\n                    \"Region\": \"а\",\r\n                    \"City\": \"а\",\r\n                    \"Town\": \"а\",\r\n                    \"Street\": \"а\",\r\n                    \"House\": \"а\",\r\n                    \"Building\": \"а\",\r\n                    \"Structure\": \"а\",\r\n                    \"Ownership\": \"а\",\r\n                    \"Flat\": \"б\",\r\n                    \"POBox\": \"абв\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"а\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"Тест.Тестантинов\",\r\n                    \"FirstName\": \"Тест.Тестантин\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\"\r\n            }\r\n        ]\r\n    },\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 1,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 4,\r\n                \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r\n            }\r\n        ],\r\n        \"DocDate\": \"{{currentDate}}\",\r\n        \"DocNum\": \"в\",\r\n        \"LicenceDate\": \"{{currentDate}}\",\r\n        \"LicenceFormNum\": \"в\",\r\n        \"LicenceNum\": \"в\",\r\n        \"LicenceOrderDate\": \"{{currentDate}}\",\r\n        \"LicenceOrderNum\": \"в\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2.09 application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"        ApplicationInfos: {\r",
											"            type: \"array\",\r",
											"            properties: {\r",
											"                ServiceNumber: { type: \"string\" }\r",
											"            },\r",
											"            required: [\"ServiceNumber\"]\r",
											"        },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [\"Status\"]\r",
											"}\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ApplicationInfos[0].ServiceNumber).to.match(/\\d{4}-\\d{7}-084503-\\d{8}\\/\\d{2}/);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"{{serviceNumber}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1.3 POST /status",
					"item": [
						{
							"name": "1.3.01 status_1069_строковые_поля_кириллица",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0, 23) + \"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text"
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.02 status_1069_строковые_поля_латиница",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdIP\")\r",
											"var ssoId = pm.globals.get(\"ssoIdIP\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"IP\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdIP}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdIP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"{{stringEn249}}\",\r\n    \"StatusDate\": \"2020-12-31T12:30:30.555Z\",\r\n    \"Note\": \"{{stringEn249}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.03 status_1069_строковые_поля_числа",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"1234567890\",\r\n    \"StatusDate\": \"2020-02-29T23:59:59.999Z\",\r\n    \"Note\": \"1234567890\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.04 status_1069_строковые_поля_спецсимволы",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"{{stringSpec}}\",\r\n    \"StatusDate\": \"{{currentDateTime}}\",\r\n    \"Note\": \"{{stringSpec}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.05 status_1069_строковые_поля_один_символ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"а\",\r\n    \"StatusDate\": \"{{currentDateTime}}\",\r\n    \"Note\": \"а\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.06 status_1069_необязательные_поля_пустые",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).is.not.null;\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"\",\r\n    \"StatusDate\": \"\",\r\n    \"Note\": \"\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.07 status_1069_необязательные_поля_пропущены",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        StatusCode: { type: \"integer\" },\r",
											"        ReasonCode: { type: \"string\"},\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    },\r",
											"    required: [ \"ServiceNumber\", \"StatusCode\",\"StatusId\", \"Status\"]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(1069);\r",
											"    pm.expect(responseBody.StatusId).is.not.null;\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "1.4 POST_status_convert, PUT_status",
					"item": [
						{
							"name": "1.4.01 status_строковые_поля_кириллица",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.01 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text"
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.02 status_строковые_поля_латиница Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdIP\")\r",
											"var ssoId = pm.globals.get(\"ssoIdIP\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"IP\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdIP}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdIP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringEn249}}\",\r\n    \"StatusDate\": \"2020-12-31T12:30:30.555Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"6789\",\r\n            \"DocTitle\": \"{{stringEn249}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringEn199}}\",\r\n            \"DocNumber\": \"{{stringEn199}}\",\r\n            \"DocDate\": \"2020-02-29\",\r\n            \"WhoSign\": \"{{stringEn249}}\",\r\n            \"DivisionCode\": \"555-555\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringEn249}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.02 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdIP}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdIP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.03 status_строковые_поля_числа",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"1234567890\",\r\n    \"StatusDate\": \"2020-02-29T23:59:59.999Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"DocTitle\": \"1234567890\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"1234567890\",\r\n            \"DocNumber\": \"1234567890\",\r\n            \"DocDate\": \"2020-12-31\",\r\n            \"WhoSign\": \"1234567890\",\r\n            \"DivisionCode\": \"999-999\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"1234567890\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.03 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.04 status_строковые_поля_спецсимволы",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringSpec}}\",\r\n    \"StatusDate\": \"{{currentDateTime}}\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"DocTitle\": \"{{stringSpec}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringSpec}}\",\r\n            \"DocNumber\": \"{{stringSpec}}\",\r\n            \"DocDate\": \"{{currentDate}}\",\r\n            \"WhoSign\": \"{{stringSpec}}\",\r\n            \"DivisionCode\": \"999-999\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringSpec}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.04 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.05 status_строковые_поля_один_символ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"а\",\r\n    \"StatusDate\": \"{{currentDateTime}}\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"DocTitle\": \"а\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"а\",\r\n            \"DocNumber\": \"а\",\r\n            \"DocDate\": \"{{currentDate}}\",\r\n            \"WhoSign\": \"а\",\r\n            \"DivisionCode\": \"999-999\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"а\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.05 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.06 status_необязательные_поля_пустые",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).is.not.null;\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"\",\r\n    \"StatusDate\": \"\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"DocTitle\": \"\",\r\n            \"ObjectId\": \"\",\r\n            \"DocSerie\": \"\",\r\n            \"DocNumber\": \"\",\r\n            \"DocDate\": \"\",\r\n            \"WhoSign\": \"\",\r\n            \"DivisionCode\": \"\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.06 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.07 status_необязательные_поля_пропущены",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing respone body's schema\r",
											"const responseBodySchema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"ServiceNumber\": { \"type\": \"string\" },\r",
											"    \"StatusCode\": { \"type\": \"integer\" },\r",
											"    \"StatusId\": { \"type\": \"string\" },\r",
											"    \"Status\": { \"type\": \"string\" },\r",
											"    \"ReasonCode\": { \"type\": \"string\" },\r",
											"    \"SignData\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"PrintForm\": { \"type\": \"string\" },\r",
											"        \"Status\": { \"type\": \"string\" },\r",
											"        \"Files\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": { \"type\": \"string\" }\r",
											"        }\r",
											"      },\r",
											"      \"required\": [ \"Status\" ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [ \"ServiceNumber\",  \"StatusCode\", \"StatusId\", \"Status\", \"SignData\" ]\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var serviceNumber = requestBody.ServiceNumber;\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.ServiceNumber).to.eql(serviceNumber);\r",
											"    pm.expect(responseBody.StatusCode).to.eql(8011);\r",
											"    pm.expect(responseBody.StatusId).is.not.null;\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\");\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var corpId = pm.globals.get(\"corpIdLE\")\r",
											"var ssoId = pm.globals.get(\"ssoIdLE\")\r",
											"var requestId = pm.variables.replaceIn('{{$guid}}')\r",
											"var fileIdInStore = pm.globals.get(\"fileIdInStore\")\r",
											"var fileName = pm.globals.get(\"fileName\")\r",
											"var bearerToken = pm.environment.get(\"bearerToken\")\r",
											"var regNumberNumeric = Math.floor(Math.random() * 10000000000)\r",
											"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');\r",
											"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";\r",
											"\r",
											"var postApplicationConvertRequest = {\r",
											"    method: 'POST',\r",
											"    url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application/convert',\r",
											"    header: {\r",
											"        'CorpId': corpId,\r",
											"        'RequestId': requestId,\r",
											"        'iv-user': ssoId,\r",
											"        'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(\r",
											"            {\r",
											"                \"Service\": {\r",
											"                    \"RegNum\": regNumberNumeric,\r",
											"                    \"RegDate\": currentDateTime\r",
											"                },\r",
											"                \"Contacts\": {\r",
											"                    \"LegalEntity\": [\r",
											"                        {\r",
											"                            \"Type\": \"DECLARANT\",\r",
											"                            \"Name\": \"а\",\r",
											"                            \"Ogrn\": \"1234567890123\",\r",
											"                            \"Inn\": \"0123456789\",\r",
											"                            \"FactAddress\": {\r",
											"                                \"Country\": \"б\",\r",
											"                                \"CountryCode\": \"б\",\r",
											"                                \"PostalCode\": \"012345\",\r",
											"                                \"Locality\": \"а\",\r",
											"                                \"Region\": \"а\",\r",
											"                                \"City\": \"а\",\r",
											"                                \"Town\": \"а\",\r",
											"                                \"Street\": \"а\",\r",
											"                                \"House\": \"а\",\r",
											"                                \"Building\": \"а\",\r",
											"                                \"Structure\": \"а\",\r",
											"                                \"Ownership\": \"а\",\r",
											"                                \"Flat\": \"б\",\r",
											"                                \"POBox\": \"абв\",\r",
											"                                \"Okato\": \"12345678901\",\r",
											"                                \"KladrCode\": \"1234567890123456789\",\r",
											"                                \"BtiBuildingCode\": \"1234567\",\r",
											"                                \"BtiAltCode\": \"1234567\",\r",
											"                                \"FiasCode\": \"7f811f64-caa3-405f-bf51-a82bfd8bdf6a\",\r",
											"                                \"Litera\": \"а\"\r",
											"                            },\r",
											"                            \"OrgHead\": {\r",
											"                                \"LastName\": \"Тест.Тестантинов\",\r",
											"                                \"FirstName\": \"Тест.Тестантин\",\r",
											"                                \"Inn\": \"123456789012\",\r",
											"                                \"WorkPhone\": \"(012) 345-67-89\",\r",
											"                                \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\"\r",
											"                            },\r",
											"                            \"Phone\": \"(012) 345-67-89\",\r",
											"                            \"EMail\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ@test.edu.org.ru\",\r",
											"                            \"OrganizationType\": \"UL\",\r",
											"                            \"CorpId\": corpId,\r",
											"                            \"SsoId\": ssoId\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"Properties\": {\r",
											"                    \"Type\": 2,\r",
											"                    \"Request\": 3,\r",
											"                    \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r",
											"                    \"ZayvPod\": 1,\r",
											"                    \"ZayvYavl\": 1,\r",
											"                    \"TypeTrustee\": 2,\r",
											"                    \"ReasonsType2List\": [\r",
											"                        {\r",
											"                            \"Value\": 4,\r",
											"                            \"Name\": \"В связи с изменением в соответствии с нормативным правовым актом Российской Федерации наименования лицензируемого вида деятельности, перечней работ, услуг, которые выполняются, оказываются в составе конкретных видов деятельности, если необходимость переоформления лицензии определена этим нормативным правовым актом\"\r",
											"                        }\r",
											"                    ],\r",
											"                    \"DocDate\": \"2021-12-06\",\r",
											"                    \"DocNum\": \"в\",\r",
											"                    \"LicenceDate\": \"2021-12-06\",\r",
											"                    \"LicenceFormNum\": \"в\",\r",
											"                    \"LicenceNum\": \"в\",\r",
											"                    \"LicenceOrderDate\": \"2021-12-06\",\r",
											"                    \"LicenceOrderNum\": \"в\"\r",
											"                }\r",
											"            }\r",
											"        )\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest(postApplicationConvertRequest, function (err, response) {\r",
											"    var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"    pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    var putApplicationRequest = {\r",
											"        method: 'PUT',\r",
											"        url: 'https://papi.mos.ru/api/lmdpioos-084503/1.0/application',\r",
											"        header: {\r",
											"            'CorpId': corpId,\r",
											"            'RequestId': requestId,\r",
											"            'iv-user': ssoId,\r",
											"            'Authorization': \"Bearer \" + bearerToken + \"\",\r",
											"            'Content-Type': 'application/json'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify({\r",
											"                \"ServiceNumber\": [\r",
											"                    serviceNumber\r",
											"                ]\r",
											"            })\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(putApplicationRequest, function (err, response) {\r",
											"        var serviceNumber = response.json().ApplicationInfos[0].ServiceNumber;\r",
											"        pm.environment.set(\"serviceNumber\", serviceNumber);\r",
											"    }\r",
											"    );\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"0\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"ServiceNumber\": \"{{serviceNumber}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.07 status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Describing responce body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        StatusId: { type: \"string\" },\r",
											"        Status: { type: \"string\" }\r",
											"    }\r",
											"}\r",
											"\r",
											"var requestBody = JSON.parse(pm.request.body);\r",
											"var statusId = requestBody.StatusId;\r",
											"\r",
											"pm.test(\"Response body check\", function() {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.response.to.have.jsonSchema(responseBodySchema)\r",
											"    pm.expect(responseBody.StatusId).to.eql(statusId);\r",
											"    pm.expect(responseBody.Status).to.eql(\"OK\")\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusId\": \"{{statusId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "2. Негативные тесты - общие поля",
			"item": [
				{
					"name": "2.2 POST /application/convert вызов без обязательных полей",
					"item": [
						{
							"name": "Блок Contacts",
							"item": [
								{
									"name": "LegalEntity",
									"item": [
										{
											"name": "application_convert вызов без LegalEntity.Type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].type\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										},
										{
											"name": "application_convert вызов без Name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].name\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										},
										{
											"name": "application_convert вызов без OrganizationType",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].organizationType\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										},
										{
											"name": "application_convert вызов без Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].documents[0].code\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										},
										{
											"name": "application_convert вызов без FileIdInStore",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].documents[0].files[0].fileIdInStore\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										},
										{
											"name": "application_convert вызов без FileName",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"//Describing response body's schema\r",
															"const responseBodySchema = {\r",
															"    properties: {\r",
															"        Status: { type: \"string\" },\r",
															"        ServiceNumber: { type: \"string\" },\r",
															"        Code: { type: \"string\" },\r",
															"        Type: { type: \"string\" },\r",
															"        SubType: { type: \"string\" },\r",
															"        Message: { type: \"string\" },\r",
															"        DebugMessage: { type: \"string\" },\r",
															"        Errors: {\r",
															"            type: \"array\",\r",
															"            items: {\r",
															"                type: \"object\",\r",
															"                properties: {\r",
															"                    Field: { type: \"string\" },\r",
															"                    Message: { type: \"string\" }\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Response body check\", function () {\r",
															"    const responseBody = pm.response.json();\r",
															"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
															"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
															"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
															"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
															"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
															"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts.legalEntity[0].documents[0].files[0].fileName\");\r",
															"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "AccessToken",
														"value": "{{accessTokenLE}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CallbackUrl",
														"value": "http://mos.ru/callbackUrl",
														"type": "text",
														"disabled": true
													},
													{
														"key": "CorpId",
														"value": "{{corpIdLE}}",
														"type": "text"
													},
													{
														"key": "ExpiredTime",
														"value": "{{expiredTime}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "RequestId",
														"value": "{{postRequestId}}",
														"type": "text"
													},
													{
														"key": "iv-user",
														"value": "{{ssoIdLE}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/application/convert",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"application",
														"convert"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "application_convert вызов без Contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Describing response body's schema\r",
													"const responseBodySchema = {\r",
													"    properties: {\r",
													"        Status: { type: \"string\" },\r",
													"        ServiceNumber: { type: \"string\" },\r",
													"        Code: { type: \"string\" },\r",
													"        Type: { type: \"string\" },\r",
													"        SubType: { type: \"string\" },\r",
													"        Message: { type: \"string\" },\r",
													"        DebugMessage: { type: \"string\" },\r",
													"        Errors: {\r",
													"            type: \"array\",\r",
													"            items: {\r",
													"                type: \"object\",\r",
													"                properties: {\r",
													"                    Field: { type: \"string\" },\r",
													"                    Message: { type: \"string\" }\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.test(\"Response body check\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
													"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
													"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
													"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
													"    pm.expect(responseBody.Errors[0].Field).to.eql(\"contacts\");\r",
													"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "AccessToken",
												"value": "{{accessTokenLE}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CallbackUrl",
												"value": "http://mos.ru/callbackUrl",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CorpId",
												"value": "{{corpIdLE}}",
												"type": "text"
											},
											{
												"key": "ExpiredTime",
												"value": "{{expiredTime}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "RequestId",
												"value": "{{postRequestId}}",
												"type": "text"
											},
											{
												"key": "iv-user",
												"value": "{{ssoIdLE}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/application/convert",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"application",
												"convert"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Блок Documents",
							"item": [
								{
									"name": "application_convert вызов без Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Describing response body's schema\r",
													"const responseBodySchema = {\r",
													"    properties: {\r",
													"        Status: { type: \"string\" },\r",
													"        ServiceNumber: { type: \"string\" },\r",
													"        Code: { type: \"string\" },\r",
													"        Type: { type: \"string\" },\r",
													"        SubType: { type: \"string\" },\r",
													"        Message: { type: \"string\" },\r",
													"        DebugMessage: { type: \"string\" },\r",
													"        Errors: {\r",
													"            type: \"array\",\r",
													"            items: {\r",
													"                type: \"object\",\r",
													"                properties: {\r",
													"                    Field: { type: \"string\" },\r",
													"                    Message: { type: \"string\" }\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.test(\"Response body check\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
													"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
													"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
													"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
													"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].code\");\r",
													"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "AccessToken",
												"value": "{{accessTokenLE}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CallbackUrl",
												"value": "http://mos.ru/callbackUrl",
												"type": "text"
											},
											{
												"key": "CorpId",
												"value": "{{corpIdLE}}",
												"type": "text"
											},
											{
												"key": "ExpiredTime",
												"value": "{{expiredTime}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{postRequestId}}",
												"type": "text"
											},
											{
												"key": "iv-user",
												"value": "{{ssoIdLE}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/application/convert",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"application",
												"convert"
											]
										}
									},
									"response": []
								},
								{
									"name": "application_convert вызов без FileIdInStore",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Describing response body's schema\r",
													"const responseBodySchema = {\r",
													"    properties: {\r",
													"        Status: { type: \"string\" },\r",
													"        ServiceNumber: { type: \"string\" },\r",
													"        Code: { type: \"string\" },\r",
													"        Type: { type: \"string\" },\r",
													"        SubType: { type: \"string\" },\r",
													"        Message: { type: \"string\" },\r",
													"        DebugMessage: { type: \"string\" },\r",
													"        Errors: {\r",
													"            type: \"array\",\r",
													"            items: {\r",
													"                type: \"object\",\r",
													"                properties: {\r",
													"                    Field: { type: \"string\" },\r",
													"                    Message: { type: \"string\" }\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.test(\"Response body check\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
													"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
													"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
													"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
													"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].files[0].fileIdInStore\");\r",
													"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "AccessToken",
												"value": "{{accessTokenLE}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CallbackUrl",
												"value": "http://mos.ru/callbackUrl",
												"type": "text"
											},
											{
												"key": "CorpId",
												"value": "{{corpIdLE}}",
												"type": "text"
											},
											{
												"key": "ExpiredTime",
												"value": "{{expiredTime}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{postRequestId}}",
												"type": "text"
											},
											{
												"key": "iv-user",
												"value": "{{ssoIdLE}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/application/convert",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"application",
												"convert"
											]
										}
									},
									"response": []
								},
								{
									"name": "application_convert вызов без FileName",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//Describing response body's schema\r",
													"const responseBodySchema = {\r",
													"    properties: {\r",
													"        Status: { type: \"string\" },\r",
													"        ServiceNumber: { type: \"string\" },\r",
													"        Code: { type: \"string\" },\r",
													"        Type: { type: \"string\" },\r",
													"        SubType: { type: \"string\" },\r",
													"        Message: { type: \"string\" },\r",
													"        DebugMessage: { type: \"string\" },\r",
													"        Errors: {\r",
													"            type: \"array\",\r",
													"            items: {\r",
													"                type: \"object\",\r",
													"                properties: {\r",
													"                    Field: { type: \"string\" },\r",
													"                    Message: { type: \"string\" }\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.test(\"Response body check\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
													"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
													"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
													"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
													"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
													"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].files[0].fileName\");\r",
													"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "AccessToken",
												"value": "{{accessTokenLE}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CallbackUrl",
												"value": "http://mos.ru/callbackUrl",
												"type": "text"
											},
											{
												"key": "CorpId",
												"value": "{{corpIdLE}}",
												"type": "text"
											},
											{
												"key": "ExpiredTime",
												"value": "{{expiredTime}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{postRequestId}}",
												"type": "text"
											},
											{
												"key": "iv-user",
												"value": "{{ssoIdLE}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Properties\": {\r\n        \"Type\": 2,\r\n        \"Request\": 3,\r\n        \"RequestPdf\": \"Переоформление лицензии на осуществление деятельности по заготовке, хранению, переработке и реализации лома чёрных металлов, цветных металлов в городе Москве без проведения проверки\",\r\n        \"ZayvPod\": 2,\r\n        \"ZayvYavl\": 1,\r\n        \"TypeTrustee\": 2,\r\n        \"ReasonsType2List\": [\r\n            {\r\n                \"Value\": 1,\r\n                \"Name\": \"В связи с прекращением деятельности по одному адресу или нескольким адресам мест ее осуществления, указанным в лицензии\"\r\n            }\r\n        ],\r\n        \"AddressLicenseStoplist\": [\r\n            {\r\n                \"LicenceTermDate\": \"2020-01-01T00:00:00.000+03:00\",\r\n                \"Country\": \"{{stringRu250}}\",\r\n                \"CountryCode\": \"{{stringRu250}}\",\r\n                \"PostalCode\": \"012345\",\r\n                \"Locality\": \"{{stringRu100}}\",\r\n                \"Region\": \"{{stringRu100}}\",\r\n                \"City\": \"{{stringRu100}}\",\r\n                \"Town\": \"{{stringRu100}}\",\r\n                \"Street\": \"{{stringRu50}}\",\r\n                \"House\": \"{{stringRu20}}\",\r\n                \"Building\": \"{{stringRu10}}\",\r\n                \"Structure\": \"{{stringRu10}}\",\r\n                \"Facility\": \"{{stringRu10}}\",\r\n                \"Ownership\": \"{{stringRu10}}\",\r\n                \"Flat\": \"{{stringRu15}}\",\r\n                \"POBox\": \"{{stringRu255}}\",\r\n                \"Okato\": \"12345678901\",\r\n                \"KladrCode\": \"1234567890123456789\",\r\n                \"KladrStreetCode\": \"1234567890123456789\",\r\n                \"BTIDistrictCode\": \"1234567\",\r\n                \"BTIRegionCode\": \"1234567\",\r\n                \"BTIStreetCode\": \"1234567\",\r\n                \"BTIBuildingCode\": \"1234567\",\r\n                \"BTIAltCode\": \"1234567\",\r\n                \"BTIFlatCode\": \"1234567\",\r\n                \"FiasCode\": \"{{$guid}}\",\r\n                \"Litera\": \"{{stringRu10}}\"\r\n            }\r\n        ],\r\n        \"LicenseeSuccessorInfo\": \"{{stringRu250}}\",\r\n        \"OtherInfo\": \"{{stringRu250}}\",\r\n        \"LicenceOrgName\": \"{{stringRu250}}\",\r\n        \"DocDate\": \"2020-01-01\",\r\n        \"DocNum\": \"{{stringRu250}}\",\r\n        \"LegalActName\": \"{{stringRu250}}\",\r\n        \"LegalActNum\": \"{{stringRu250}}\",\r\n        \"LegalActDate\": \"2020-01-01\",\r\n        \"LegalActChg\": \"{{stringRu250}}\",\r\n        \"DocLitsenziatDate\": \"2020-01-01\",\r\n        \"DocLitsenziatNum\": \"{{stringRu250}}\",\r\n        \"LicenceDate\": \"2020-01-01\",\r\n        \"LicenceFormNum\": \"{{stringRu250}}\",\r\n        \"LicenceNum\": \"{{stringRu250}}\",\r\n        \"LicenceOrderDate\": \"2020-01-01\",\r\n        \"LicenceOrderNum\": \"{{stringRu250}}\",\r\n        \"VersionPaper\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/application/convert",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"application",
												"convert"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "2.3 PUT /application вызов без обязательных полей",
					"item": [
						{
							"name": "application вызов без ServiceNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"serviceNumber\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2.4 POST /status вызов без обязательных полей",
					"item": [
						{
							"name": "status вызов без StatusCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"statusCode\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenPP}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdPP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "status вызов без ServiceNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"serviceNumber\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{AccessToken}}",
										"type": "text"
									},
									{
										"key": "CorpId",
										"value": "{{CorpId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{iv-user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"1069\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2.5 POST /status/convert вызов без обязательных полей",
					"item": [
						{
							"name": "status/convert вызов без StatusCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"statusCode\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "status/convert вызов без Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].code\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "status/convert вызов без FileIdInStore",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].files[0].fileIdInStore\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "status/convert вызов без FileName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"documents[0].files[0].fileName\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"ServiceNumber\": \"{{serviceNumber}}\",\r\n    \"ReasonCode\": \"\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						},
						{
							"name": "status/convert вызов без ServiceNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"serviceNumber\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"StatusCode\": \"8011\",\r\n    \"StatusTitle\": \"{{stringRu250}}\",\r\n    \"StatusDate\": \"2021-01-01T00:00:00.000Z\",\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"Note\": \"{{stringRu250}}\",\r\n    \"StatusId\": \"{{$guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/status/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"status",
										"convert"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2.6 PUT /application вызов без обязательных полей",
					"item": [
						{
							"name": "application вызов без ServiceNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"serviceNumber\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenLE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CorpId",
										"value": "{{corpIdLE}}",
										"type": "text"
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{putRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdLE}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ServiceNumber\": [\r\n        \"\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "3. Негативные тесты - кастомные поля",
			"item": [
				{
					"name": "POST /application/convert вызов без кастомнных полей",
					"item": [
						{
							"name": "application/convert вызов без Properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Describing response body's schema\r",
											"const responseBodySchema = {\r",
											"    properties: {\r",
											"        Status: { type: \"string\" },\r",
											"        ServiceNumber: { type: \"string\" },\r",
											"        Code: { type: \"string\" },\r",
											"        Type: { type: \"string\" },\r",
											"        SubType: { type: \"string\" },\r",
											"        Message: { type: \"string\" },\r",
											"        DebugMessage: { type: \"string\" },\r",
											"        Errors: {\r",
											"            type: \"array\",\r",
											"            items: {\r",
											"                type: \"object\",\r",
											"                properties: {\r",
											"                    Field: { type: \"string\" },\r",
											"                    Message: { type: \"string\" }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body check\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.Status).to.eql(\"BAD_REQUEST\");\r",
											"    pm.expect(responseBody.Code).to.eql(\"V03\");\r",
											"    pm.expect(responseBody.Type).to.eql(\"VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.SubType).to.eql(\"REQUEST_VALIDATION_ERROR\");\r",
											"    pm.expect(responseBody.Message).to.eql(\"За дополнительными сведениями обратитесь в службу поддержки с текстом данного сообщения.\");\r",
											"    pm.expect(responseBody.DebugMessage).to.eql(\"Request JSON contains unavailable data.\");\r",
											"    pm.expect(responseBody.Errors[0].Field).to.eql(\"properties\");\r",
											"    pm.expect(responseBody.Errors[0].Message).to.eql(\"must not be null\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{accessTokenPP}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CallbackUrl",
										"value": "http://mos.ru/callbackUrl",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ExpiredTime",
										"value": "{{expiredTime}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "RequestId",
										"value": "{{postRequestId}}",
										"type": "text"
									},
									{
										"key": "iv-user",
										"value": "{{ssoIdPP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Service\": {\r\n        \"RegNum\": \"{{stringRu10}}\",\r\n        \"RegDate\": \"{{currentDateTime}}\"\r\n    },\r\n    \"Contacts\": {\r\n        \"LegalEntity\": [\r\n            {\r\n                \"Type\": \"LEGAL_REPRESENTATIVE\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"0123456789\",\r\n                \"FactAddress\": {},\r\n                \"OrgHead\": {},\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"{{corpIdLE}}\",\r\n                \"SsoId\": \"{{ssoIdLE}}\",\r\n                \"OrganizationFormCode\": \"\",\r\n                \"OrganizationFormName\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"Type\": \"DECLARANT\",\r\n                \"FullName\": \"{{stringRu500}}\",\r\n                \"Name\": \"{{stringRu250}}\",\r\n                \"Ogrn\": \"1234567890123\",\r\n                \"Inn\": \"1234567890\",\r\n                \"FactAddress\": {\r\n                    \"Country\": \"{{stringRu250}}\",\r\n                    \"CountryCode\": \"{{stringRu250}}\",\r\n                    \"PostalCode\": \"012345\",\r\n                    \"Locality\": \"{{stringRu100}}\",\r\n                    \"Region\": \"{{stringRu100}}\",\r\n                    \"City\": \"{{stringRu100}}\",\r\n                    \"Town\": \"{{stringRu100}}\",\r\n                    \"Street\": \"{{stringRu50}}\",\r\n                    \"House\": \"{{stringRu20}}\",\r\n                    \"Building\": \"{{stringRu10}}\",\r\n                    \"Structure\": \"{{stringRu10}}\",\r\n                    \"Ownership\": \"{{stringRu10}}\",\r\n                    \"Flat\": \"{{stringRu15}}\",\r\n                    \"POBox\": \"{{stringRu255}}\",\r\n                    \"Okato\": \"12345678901\",\r\n                    \"KladrCode\": \"1234567890123456789\",\r\n                    \"BtiBuildingCode\": \"1234567\",\r\n                    \"BtiAltCode\": \"1234567\",\r\n                    \"FiasCode\": \"{{$guid}}\",\r\n                    \"Litera\": \"{{stringRu10}}\"\r\n                },\r\n                \"OrgHead\": {\r\n                    \"LastName\": \"{{stringRu250}}\",\r\n                    \"FirstName\": \"{{stringRu250}}\",\r\n                    \"MiddleName\": \"{{stringRu250}}\",\r\n                    \"Inn\": \"123456789012\",\r\n                    \"WorkPhone\": \"(012) 345-67-89\",\r\n                    \"EMail\": \"te@st.com\"\r\n                },\r\n                \"Phone\": \"(012) 345-67-89\",\r\n                \"EMail\": \"te@st.com\",\r\n                \"OrganizationType\": \"UL\",\r\n                \"CorpId\": \"\",\r\n                \"SsoId\": \"\",\r\n                \"Documents\": [\r\n                    {\r\n                        \"Code\": \"12345\",\r\n                        \"DocTitle\": \"{{stringRu250}}\",\r\n                        \"ObjectId\": \"{{$guid}}\",\r\n                        \"DocSerie\": \"{{stringRu200}}\",\r\n                        \"DocNumber\": \"{{stringRu200}}\",\r\n                        \"DocDate\": \"2021-01-01\",\r\n                        \"WhoSign\": \"{{stringRu250}}\",\r\n                        \"DivisionCode\": \"000-000\",\r\n                        \"Files\": [\r\n                            {\r\n                                \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                                \"FileName\": \"{{fileName}}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"Documents\": [\r\n        {\r\n            \"Code\": \"12345\",\r\n            \"DocTitle\": \"{{stringRu250}}\",\r\n            \"ObjectId\": \"{{$guid}}\",\r\n            \"DocSerie\": \"{{stringRu200}}\",\r\n            \"DocNumber\": \"{{stringRu200}}\",\r\n            \"DocDate\": \"2021-01-01\",\r\n            \"WhoSign\": \"{{stringRu250}}\",\r\n            \"DivisionCode\": \"000-000\",\r\n            \"Files\": [\r\n                {\r\n                    \"FileIdInStore\": \"{{fileIdInStore}}\",\r\n                    \"FileName\": \"{{fileName}}\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/application/convert",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"application",
										"convert"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const requestBody = {",
					"    method: 'POST',",
					"    url: 'https://papi.mos.ru/token',",
					"    header: {",
					"        'Authorization': 'Basic N3psQ21jeGpacFdjbGFZblZoMlhMQUlvQll3YTpFNjI2SzNuYjJJUGZmdnJtVGM0cGdmSGozeklh',",
					"        'Content-Type': 'application/x-www-form-urlencoded'",
					"        },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            {key: 'grant_type', value: 'client_credentials'}",
					"        ]",
					"    }",
					"};",
					"",
					"pm.sendRequest(requestBody, function (err, response) {",
					"    const bearerToken = response.json().access_token",
					"    pm.environment.set(\"bearerToken\", bearerToken);",
					"    }",
					");",
					"",
					"var postRequestId = pm.variables.replaceIn('{{$guid}}');",
					"pm.collectionVariables.set(\"postRequestId\",postRequestId);",
					"",
					"var timeStamp = pm.variables.replaceIn('{{$isoTimestamp}}');",
					"var currentDateTime = timeStamp.substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateTime\",currentDateTime);",
					"",
					"var currentDate = timeStamp.substr(0,10);",
					"pm.collectionVariables.set(\"currentDate\",currentDate);",
					"",
					"var currentDate5 = new Date()",
					"var expiredTime =(currentDate5.toJSON(currentDate5.setDate(currentDate5.getDate()+22)))",
					"pm.collectionVariables.set(\"expiredTime\",expiredTime);",
					"",
					"var currentDate1 = new Date()",
					"var birthDate18 = (currentDate1.toJSON(currentDate1.setFullYear(currentDate1.getFullYear() - 18))).substr(0, 10);",
					"pm.collectionVariables.set(\"birthDate18\",birthDate18);",
					"",
					"var currentDate2 = new Date()",
					"var birthDate50 = (currentDate2.toJSON(currentDate2.setFullYear(currentDate2.getFullYear() - 50))).substr(0, 10);",
					"pm.collectionVariables.set(\"birthDate50\",birthDate50);",
					"",
					"var currentDate3 = new Date()",
					"var birthDate130 = (currentDate3.toJSON(currentDate3.setFullYear(currentDate3.getFullYear() - 130))).substr(0, 10);",
					"pm.collectionVariables.set(\"birthDate130\",birthDate130);",
					"",
					"var currentDate6 = new Date();;",
					"var currentDateZeroTime = currentDate6.toJSON(currentDate6.setUTCHours(00,00,00,000)).substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroTime\",currentDateZeroTime);",
					"",
					"var currentDate7 = new Date();",
					"currentDate7.setUTCMinutes(00);",
					"currentDate7.setUTCSeconds(00);",
					"var currentDateZeroMmSs = currentDate7.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroMmSs\",currentDateZeroMmSs);",
					"",
					"var currentDate8 = new Date();",
					"currentDate8.setUTCHours(00);",
					"currentDate8.setUTCSeconds(00);",
					"var currentDateZeroHhSs = currentDate8.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroHhSs\",currentDateZeroHhSs);",
					"",
					"var currentDate9 = new Date();",
					"currentDate9.setUTCHours(00);",
					"currentDate9.setUTCMinutes(00);",
					"var currentDateZeroHhMm = currentDate9.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroHhMm\",currentDateZeroHhMm);",
					"",
					"var currentDate10 = new Date();",
					"currentDate10.setUTCHours(00);",
					"var currentDateZeroHh = currentDate10.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroHh\",currentDateZeroHh);",
					"",
					"var currentDate11 = new Date();",
					"currentDate11.setUTCMinutes(00);",
					"var currentDateZeroMm = currentDate11.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroMm\",currentDateZeroMm);",
					"",
					"var currentDate12 = new Date();",
					"currentDate12.setUTCFullYear(2020, 02, 29);",
					"var leapYearDate = currentDate12.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"leapYearDate\",leapYearDate);",
					"",
					"var currentDate13 = new Date();",
					"currentDate13.setUTCSeconds(00);",
					"var currentDateZeroSs = currentDate13.toJSON().substr(0,23)+\"+03:00\";",
					"pm.collectionVariables.set(\"currentDateZeroSs\",currentDateZeroSs);",
					"",
					"var currentDate14 = new Date();",
					"var currentDate000000 = currentDate14.toJSON(currentDate14.setUTCHours(00,00,00,000)).substr(0,19);",
					"pm.collectionVariables.set(\"currentDate000000\",currentDate000000);",
					"",
					"var currentDate15 = new Date();",
					"currentDate15.setUTCFullYear(2020, 02, 29);",
					"var leapYearDate000000 = currentDate15.toJSON().substr(0,19);",
					"pm.collectionVariables.set(\"leapYearDate000000\",leapYearDate000000);",
					"",
					"var regNumberNumeric = Math.floor(Math.random() * 10000000000)",
					"pm.collectionVariables.set(\"regNumberNumeric\", regNumberNumeric);",
					"",
					"function generatestringRu(length) {",
					"    var result = '';",
					"    var characters = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя';",
					"    var charactersLength = characters.length;",
					"    for (var i = 0; i < length; i++) {",
					"        result += characters.charAt(Math.floor(Math.random() *",
					"            charactersLength));",
					"    }",
					"    return result;",
					"}",
					"",
					"function generatestringEn(length) {",
					"    var result = '';",
					"    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';",
					"    var charactersLength = characters.length;",
					"    for (var i = 0; i < length; i++) {",
					"        result += characters.charAt(Math.floor(Math.random() *",
					"            charactersLength));",
					"    }",
					"    return result;",
					"}",
					"",
					"function generateStringNo(length) {",
					"    var result = '';",
					"    var characters = '0123456789';",
					"    var charactersLength = characters.length;",
					"    for (var i = 0; i < length; i++) {",
					"        result += characters.charAt(Math.floor(Math.random() *",
					"            charactersLength));",
					"    }",
					"    return result;",
					"}",
					"",
					"var stringRu500 = generatestringRu(500);",
					"pm.collectionVariables.set(\"stringRu500\",stringRu500);",
					"",
					"var stringRu255 = generatestringRu(255)",
					"pm.collectionVariables.set(\"stringRu255\",stringRu255);",
					"",
					"var stringRu250 = generatestringRu(250);",
					"pm.collectionVariables.set(\"stringRu250\",stringRu250);",
					"",
					"var stringRu200 = generatestringRu(200)",
					"pm.collectionVariables.set(\"stringRu200\",stringRu200);",
					"",
					"var stringRu100 = generatestringRu(100)",
					"pm.collectionVariables.set(\"stringRu100\",stringRu100);",
					"",
					"var stringRu50 = generatestringRu(50)",
					"pm.collectionVariables.set(\"stringRu50\",stringRu50);",
					"",
					"var stringRu30 = generatestringRu(30)",
					"pm.collectionVariables.set(\"stringRu30\",stringRu30);",
					"",
					"var stringRu20 = generatestringRu(20)",
					"pm.collectionVariables.set(\"stringRu20\",stringRu20);",
					"",
					"var stringRu19 = generatestringRu(19)",
					"pm.collectionVariables.set(\"stringRu19\",stringRu19);",
					"",
					"var stringRu15 = generatestringRu(15)",
					"pm.collectionVariables.set(\"stringRu15\",stringRu15);",
					"",
					"var stringRu10 = generatestringRu(10)",
					"pm.collectionVariables.set(\"stringRu10\",stringRu10);",
					"",
					"var stringEn499 = generatestringEn(499);",
					"pm.collectionVariables.set(\"stringEn499\",stringEn499);",
					"",
					"var stringEn254 = generatestringEn(254)",
					"pm.collectionVariables.set(\"stringEn254\",stringEn254);",
					"",
					"var stringEn249 = generatestringEn(249);",
					"pm.collectionVariables.set(\"stringEn249\",stringEn249);",
					"",
					"var stringEn199 = generatestringEn(199);",
					"pm.collectionVariables.set(\"stringEn199\",stringEn199);",
					"",
					"var stringEn99 = generatestringEn(99);",
					"pm.collectionVariables.set(\"stringEn99\",stringEn99);",
					"",
					"var stringEn49 = generatestringEn(49);",
					"pm.collectionVariables.set(\"stringEn49\",stringEn49);",
					"",
					"var stringEn29 = generatestringEn(29);",
					"pm.collectionVariables.set(\"stringEn29\",stringEn29);",
					"",
					"var stringEn19 = generatestringEn(19);",
					"pm.collectionVariables.set(\"stringEn19\",stringEn19);",
					"",
					"var stringEn18 = generatestringEn(18);",
					"pm.collectionVariables.set(\"stringEn18\",stringEn18);",
					"",
					"var stringEn15 = generatestringEn(15);",
					"pm.collectionVariables.set(\"stringEn15\",stringEn15);",
					"",
					"var stringEn14 = generatestringEn(14);",
					"pm.collectionVariables.set(\"stringEn14\",stringEn14);",
					"",
					"var stringEn10 = generatestringEn(10);",
					"pm.collectionVariables.set(\"stringEn10\",stringEn10);",
					"",
					"var stringEn9 = generatestringEn(9);",
					"pm.collectionVariables.set(\"stringEn9\",stringEn9);",
					"",
					"var stringNo100= generateStringNo(100);",
					"pm.collectionVariables.set(\"stringNo100\",stringNo100);",
					"",
					"var stringNo25 = generateStringNo(25);",
					"pm.collectionVariables.set(\"stringNo25\",stringNo25);",
					"",
					"var stringNo19 = generateStringNo(19);",
					"pm.collectionVariables.set(\"stringNo19\",stringNo19);",
					"",
					"var stringNo11 = generateStringNo(11);",
					"pm.collectionVariables.set(\"stringNo11\",stringNo11);",
					"",
					"var stringNo10 = generateStringNo(10);",
					"pm.collectionVariables.set(\"stringNo10\",stringNo10);",
					"",
					"var stringNo7 = generateStringNo(7);",
					"pm.collectionVariables.set(\"stringNo7\",stringNo7);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var putRequestId =  pm.request.headers.get('RequestId');",
					"pm.collectionVariables.set(\"putRequestId\", putRequestId);",
					"",
					"var statusId = pm.response.json().StatusId;",
					"pm.collectionVariables.set(\"statusId\",statusId);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://papi.mos.ru/api/lmdpioos-084503/1.0"
		},
		{
			"key": "postRequestId",
			"value": ""
		},
		{
			"key": "currentDateTime",
			"value": ""
		},
		{
			"key": "currentDate",
			"value": ""
		},
		{
			"key": "expiredTime",
			"value": ""
		},
		{
			"key": "birthDate18",
			"value": ""
		},
		{
			"key": "birthDate50",
			"value": ""
		},
		{
			"key": "birthDate130",
			"value": ""
		},
		{
			"key": "regNumberNumeric",
			"value": ""
		},
		{
			"key": "stringRu500",
			"value": ""
		},
		{
			"key": "stringRu255",
			"value": ""
		},
		{
			"key": "stringRu250",
			"value": ""
		},
		{
			"key": "stringRu200",
			"value": ""
		},
		{
			"key": "stringRu10",
			"value": ""
		},
		{
			"key": "stringEn499",
			"value": ""
		},
		{
			"key": "stringEn254",
			"value": ""
		},
		{
			"key": "stringEn249",
			"value": ""
		},
		{
			"key": "stringEn199",
			"value": ""
		},
		{
			"key": "stringNo100",
			"value": ""
		},
		{
			"key": "stringNo25",
			"value": ""
		},
		{
			"key": "stringNo19",
			"value": ""
		},
		{
			"key": "stringNo10",
			"value": ""
		},
		{
			"key": "stringNo7",
			"value": ""
		},
		{
			"key": "currentDateZeroTime",
			"value": ""
		},
		{
			"key": "stringEn99",
			"value": ""
		},
		{
			"key": "stringEn10",
			"value": ""
		},
		{
			"key": "stringEn9",
			"value": ""
		},
		{
			"key": "currentDateZeroMmSs",
			"value": ""
		},
		{
			"key": "currentDateZeroHhSs",
			"value": ""
		},
		{
			"key": "currentDateZeroHhMm",
			"value": ""
		},
		{
			"key": "currentDateZeroHh",
			"value": ""
		},
		{
			"key": "currentDateZeroMm",
			"value": ""
		},
		{
			"key": "leapYearDate",
			"value": ""
		},
		{
			"key": "putRequestId",
			"value": ""
		},
		{
			"key": "serviceNumber",
			"value": ""
		},
		{
			"key": "statusId",
			"value": ""
		},
		{
			"key": "currentDateZeroSs",
			"value": ""
		},
		{
			"key": "stringRu100",
			"value": ""
		},
		{
			"key": "currentDate000000",
			"value": ""
		},
		{
			"key": "leapYearDate000000",
			"value": ""
		},
		{
			"key": "stringRu19",
			"value": ""
		},
		{
			"key": "stringEn18",
			"value": ""
		},
		{
			"key": "stringNo11",
			"value": ""
		},
		{
			"key": "stringRu50",
			"value": ""
		},
		{
			"key": "stringRu20",
			"value": ""
		},
		{
			"key": "stringRu15",
			"value": ""
		},
		{
			"key": "stringEn49",
			"value": ""
		},
		{
			"key": "stringEn19",
			"value": ""
		},
		{
			"key": "stringEn14",
			"value": ""
		},
		{
			"key": "stringRu30",
			"value": ""
		},
		{
			"key": "stringEn15",
			"value": ""
		},
		{
			"key": "stringEn29",
			"value": ""
		}
	]
}
